plugins {
    id 'com.android.library'
}

android {
    compileSdk 30

    defaultConfig {
        minSdk 29
        targetSdk 30

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
//        externalNativeBuild {
//            cmake {
//                cppFlags ""
//            }
//        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.18.1"
//            arguments "-DANDROID_DEPRECATED_HEADERS=ON"
        }
    }

    sourceSets.main {
        jni.srcDirs = []
        jniLibs.srcDir "jniLibs"
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'java', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

//修改jar名字+将指定jar生成的地方
//task makeJar(type: Zip, description: "create a jar archive of the native libs") {
task makeJar(type: Copy) {
    //删除存在的jar
//    baseName "ssapi"
//    extension "jar"
    delete 'build/libs/ss_api.jar'
//    archivesBaseName = "ss_api"
    //设置拷贝的文件，注意：不同as版本路径不同
//    from('build/intermediates/packaged-classes/debug')
    from('build/intermediates/aar_main_jar/release/')
    //打进jar包后的文件目录
    //将classes.jar放入build/libs/目录下
    into('build/libs/')
//    into('')
    //include ,exclude参数来设置过滤
    //去掉不需要打包的目录和文件
    //exclude('BuildConfig.class', 'R.class')
    //去掉R$开头的文件
    //exclude { it.name.startsWith('R$'); }
    //（我们只关心classes.jar这个文件）
    include('classes.jar')
    //重命名
    rename ('classes.jar', 'ssapi.jar')
//    destinationDir file("$projectDir/../build/libs/")
//    destinationDir = file('build/libs')
}
makeJar.dependsOn(build)